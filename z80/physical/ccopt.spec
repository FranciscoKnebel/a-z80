###############################################################
#  Generated by:      Cadence Innovus 15.20-p005_1
#  OS:                Linux x86_64(Host ID ufrgs-server-09)
#  Generated on:      Tue Nov 20 16:35:08 2018
#  Design:            z80_topzera
#  Command:           eval_legacy { create_ccopt_clock_tree_spec -file physical/ccopt.spec }
###############################################################
#-------------------------------------------------------------------------------
# Clock tree setup script - dialect: Innovus
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------

namespace eval ::ccopt {}
namespace eval ::ccopt::ilm {}
set ::ccopt::ilm::ccoptSpecRestoreData {}
# Start by checking for unflattened ILMs.
# Will flatten if so and then check the db sync.
if { [catch {ccopt_check_and_flatten_ilms_no_restore}] } {
  return -code error
}
# cache the value of the restore command output by the ILM flattening code
set ::ccopt::ilm::ccoptSpecRestoreData $::ccopt::ilm::ccoptRestoreILMState

# The following pins are inputs to multi-output cells carrying SDC clocks
# These pins are ignore skew pins
set_ccopt_property sink_type -pin IOPADS_INST/PAD_CLK/PAD ignore
set_ccopt_property sink_type_reasons -pin IOPADS_INST/PAD_CLK/PAD multiple_outputs

# Clocks present at pin CLK
#   clock (period 25.000ns) in timing_config default_emulate_constraint_mode([synthesis//a-z80.default_emulate_constraint_mode.sdc])
create_ccopt_clock_tree -name clock -source CLK -no_skew_group
set_ccopt_property target_max_trans_sdc -delay_corner default_emulate_delay_corner -early -clock_tree clock 0.500

set_ccopt_property target_max_trans_sdc -delay_corner default_emulate_delay_corner -late -clock_tree clock 0.500
set_ccopt_property source_output_max_trans -delay_corner default_emulate_delay_corner -early -clock_tree clock 0.500
set_ccopt_property source_output_max_trans -delay_corner default_emulate_delay_corner -early -clock_tree clock 0.500
set_ccopt_property source_output_max_trans -delay_corner default_emulate_delay_corner -late -clock_tree clock 0.500
set_ccopt_property source_output_max_trans -delay_corner default_emulate_delay_corner -late -clock_tree clock 0.500
# Clock period setting for source pin of clock
set_ccopt_property clock_period -pin CLK 25

# Clocks present at pin IOPADS_INST/PAD_CLK/Y
#   clock (period 25.000ns) in timing_config default_emulate_constraint_mode([synthesis//a-z80.default_emulate_constraint_mode.sdc])
# A generated clock tree is being used, even though the primary clock present is defined as non-generated in the SDC.
# This is to ensure that the arcs from
#   pin IOPADS_INST/PAD_CLK/PAD
# to 
#   pin IOPADS_INST/PAD_CLK/Y
# are contained within the clock tree network for other clocks.
create_ccopt_generated_clock_tree -name clock<1> -source IOPADS_INST/PAD_CLK/Y -generated_by IOPADS_INST/PAD_CLK/PAD
set_ccopt_property target_max_trans_sdc -delay_corner default_emulate_delay_corner -early -clock_tree clock<1> 0.500

set_ccopt_property target_max_trans_sdc -delay_corner default_emulate_delay_corner -late -clock_tree clock<1> 0.500
# Clock period setting for source pin of clock<1>
set_ccopt_property clock_period -pin IOPADS_INST/PAD_CLK/Y auto

# Skew group to balance non generated clock:clock in timing_config:default_emulate_constraint_mode (sdc synthesis//a-z80.default_emulate_constraint_mode.sdc)
create_ccopt_skew_group -name clock/default_emulate_constraint_mode -sources CLK -auto_sinks
set_ccopt_property include_source_latency -skew_group clock/default_emulate_constraint_mode true
set_ccopt_property extracted_from_clock_name -skew_group clock/default_emulate_constraint_mode clock
set_ccopt_property extracted_from_constraint_mode_name -skew_group clock/default_emulate_constraint_mode default_emulate_constraint_mode
set_ccopt_property extracted_from_delay_corners -skew_group clock/default_emulate_constraint_mode {default_emulate_delay_corner default_emulate_delay_corner}


check_ccopt_clock_tree_convergence
# Restore the ILM status if possible
if { [get_ccopt_property auto_design_state_for_ilms] == 0 } {
  if {$::ccopt::ilm::ccoptSpecRestoreData != {} } {
    eval $::ccopt::ilm::ccoptSpecRestoreData
  }
}

